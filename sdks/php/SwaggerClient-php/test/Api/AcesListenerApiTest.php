<?php
/**
 * AcesListenerApiTest
 * PHP version 5
 *
 * @category Class
 * @package  ArkAces\AcesListenerApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * ACES Listener API
 *
 * API Specification for ACES Listeners that read data on a blockchain and forward transaction events to registered subscribers.
 *
 * OpenAPI spec version: 1.1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace ArkAces\AcesListenerApi;

use \ArkAces\AcesListenerApi\Configuration;
use \ArkAces\AcesListenerApi\ApiException;
use \ArkAces\AcesListenerApi\ObjectSerializer;

/**
 * AcesListenerApiTest Class Doc Comment
 *
 * @category Class
 * @package  ArkAces\AcesListenerApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AcesListenerApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for statusGet
     *
     * Get Health of node..
     *
     */
    public function testStatusGet()
    {
    }

    /**
     * Test case for subscriptionsIdEventsGet
     *
     * List Subscription Events.
     *
     */
    public function testSubscriptionsIdEventsGet()
    {
    }

    /**
     * Test case for subscriptionsIdGet
     *
     * Gets Subscription.
     *
     */
    public function testSubscriptionsIdGet()
    {
    }

    /**
     * Test case for subscriptionsIdResubscribesPost
     *
     * Create a Resubscribe..
     *
     */
    public function testSubscriptionsIdResubscribesPost()
    {
    }

    /**
     * Test case for subscriptionsIdUnsubscribesPost
     *
     * Create an Unsubscription..
     *
     */
    public function testSubscriptionsIdUnsubscribesPost()
    {
    }

    /**
     * Test case for subscriptionsPost
     *
     * Registers a subscriber node to receive blockchain events..
     *
     */
    public function testSubscriptionsPost()
    {
    }
}
